{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Technical Specification AC common function",
    "description": "This document describes the requirements for connection details and API service information from SINGULARITY (SGL) to Partners.",
    "contact": {
      "email": "sample@email.com",
      "name": "Broker Team",
      "url": "https://google.com"
    },
    "termsOfService": "https://google.com"
  },
  "tags": [
    {
      "name": "Notification",
      "description": "Everythings about notification"
    },
    {
      "name": "Others",
      "description": "Everythings about others"
    }
  ],
  "servers": [
    {
      "url": "https://api-dev.adldigitalservice.com/anticorrupt-api/common/",
      "description": "Devlopment server"
    },
    {
      "url": "https://api.server.staging/v1",
      "description": "Staging server"
    },
    {
      "url": "https://api.server.production/v1",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "name": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "body_parameter": {
        "description": "Contain a body parameters",
        "type": "object",
        "required": [
          "transaction",
          "sendTime",
          "TORO_messageId",
          "content",
          "TORO_notificationCategory",
          "characteristic",
          "value",
          "attachment",
          "sender",
          "receiver"
        ],
        "properties": {
          "transaction": {
            "type": "string",
            "description": "Transaction Id",
            "pattern": "^transaction_[0-9a-z]+$",
            "maxLength": 20
          },
          "sendTime": {
            "type": "string",
            "format": "date-time",
            "description": "Notification send datetime"
          },
          "TORO_messageId": {
            "type": "string",
            "description": "Message Id",
            "pattern": "^message_[0-9a-z]+$",
            "maxLength": 20
          },
          "subject": {
            "type": "string",
            "description": "Notification's subject",
            "pattern": "^subject_[0-9a-z]+$",
            "maxLength": 20
          },
          "content": {
            "type": "string",
            "description": "Default notification message",
            "pattern": "^content_[0-9a-z]+$",
            "maxLength": 20
          },
          "localizedString": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "Message language",
                  "example": [
                    "en-US",
                    "th_TH"
                  ]
                },
                "attribute": {
                  "type": "string",
                  "description": "Parameter name",
                  "pattern": "^attribute_[0-9a-z]+$",
                  "maxLength": 20
                },
                "string": {
                  "type": "string",
                  "description": "Notification message",
                  "pattern": "^string_[0-9a-z]+$",
                  "maxLength": 20
                }
              }
            }
          },
          "messageType": {
            "type": "string",
            "description": "Message type",
            "example": "Mobile app push notification"
          },
          "TORO_notificationType": {
            "type": "string",
            "description": "Notification type",
            "example": [
              "broadcast",
              "individual"
            ]
          },
          "priority": {
            "type": "string",
            "description": "Priority",
            "pattern": "^priority_[0-9a-z]+$",
            "maxLength": 20
          },
          "TORO_notificationCategory": {
            "type": "string",
            "description": "- `bill` for bill, payment, and top up category.\n- `usage` for usage category.\n- `privileges` for points and privileges category.\n- `promotion` for Package promotion category.\n- `digitalService` for digital services category.\n- `information` for information category.\n",
            "example": "bill"
          },
          "TORO_dataOnly": {
            "type": "boolean",
            "description": "Configure payload's notification",
            "default": false
          },
          "characteristic": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "This parameter is require and validate value",
                  "example": [
                    "appId",
                    "appName"
                  ]
                },
                "valueType": {
                  "type": "string",
                  "description": "Characteristic value type",
                  "example": [
                    "string",
                    "integer"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "Characteristic value This parameter validates missing and invalid values is not null"
                }
              }
            }
          },
          "attachment": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Attachment Id"
                },
                "attachmentType": {
                  "type": "string",
                  "description": "Attachment type"
                },
                "mimeType": {
                  "type": "string",
                  "description": "Attachment type"
                },
                "name": {
                  "type": "string",
                  "description": "Attachment name",
                  "example": [
                    "actionLink",
                    "displaySizeHeight",
                    "displaySizeWidth",
                    "mediaData"
                  ]
                },
                "url": {
                  "type": "string",
                  "description": "URL"
                },
                "size": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size amount"
                      },
                      "units": {
                        "type": "string",
                        "description": "Size units"
                      }
                    }
                  }
                }
              }
            }
          },
          "sender": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Origin sender name"
                }
              }
            }
          },
          "receiver": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "appUserId": {
                  "type": "string",
                  "description": "Receiver"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "200Success": {
        "description": "Successfully created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "httpStatus": {
                  "type": "string",
                  "example": "200"
                },
                "resultCode": {
                  "type": "string",
                  "example": "20000"
                },
                "developerMessage": {
                  "type": "string",
                  "example": "success"
                }
              }
            }
          }
        }
      },
      "403Error": {
        "description": "Missing mandatory Header & Body from domain service",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "httpStatus": {
                  "type": "string",
                  "example": "403"
                },
                "transaction": {
                  "type": "string",
                  "example": "$req.body.transaction"
                },
                "code": {
                  "type": "string",
                  "example": "40300"
                },
                "reason": {
                  "type": "string",
                  "example": "Missing or invalid parameter"
                },
                "status": {
                  "type": "string",
                  "example": "403"
                }
              }
            }
          }
        }
      },
      "404Error": {
        "description": "Unknown URL from domain service",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "httpStatus": {
                  "type": "string",
                  "example": "404"
                },
                "resultCode": {
                  "type": "string",
                  "example": "40400"
                },
                "developerMessage": {
                  "type": "string",
                  "example": "Unknown URL"
                }
              }
            }
          }
        }
      },
      "417Error": {
        "description": "Verify content-type",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "httpStatus": {
                  "type": "string",
                  "example": "417"
                },
                "resultCode": {
                  "type": "string",
                  "example": "41700"
                },
                "developerMessage": {
                  "type": "string",
                  "example": "Expectation Failed"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "PageLimit": {
        "name": "limit",
        "in": "query",
        "description": "Limit the number of items on a page",
        "schema": {
          "type": "integer",
          "maximum": 1024,
          "minimum": 0,
          "format": "int32"
        }
      },
      "PageOffset": {
        "name": "offset",
        "in": "query",
        "description": "Specifies the page number of the others to be displayed",
        "schema": {
          "type": "integer",
          "maximum": 1024,
          "minimum": 0,
          "format": "int32"
        }
      }
    }
  },
  "paths": {
    "/createNotiIndividual": {
      "get": {
        "summary": "list an individual notification",
        "description": "Create a individual notification",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageLimit"
          },
          {
            "$ref": "#/components/parameters/PageOffset"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Success"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          }
        }
      },
      "post": {
        "summary": "Create an individual notification",
        "description": "AC received a request from domain service with the following parameters.",
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/body_parameter"
                },
                "maxItems": 100
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Success"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          }
        }
      }
    },
    "/others/{username}": {
      "get": {
        "summary": "Obtain others information",
        "description": "Obtain information about an others from his or her unique username",
        "tags": [
          "Others"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Success"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          }
        }
      }
    }
  }
}
